{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\l-thea\\\\Documents\\\\b431\\\\movieAppClient\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MovieCard from '../components/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('https://movieapp-api-lms1.onrender.com/movies/getMovies'); // Correct endpoint\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('API Response:', data); // Log the response to inspect its structure\n\n        // Access the movies array from the response object\n        if (Array.isArray(data.movies)) {\n          setMovies(data.movies); // Set movies if data.movies is an array\n        } else {\n          throw new Error('Response does not contain an array of movies');\n        }\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setError('Failed to load movies. Please try again later.'); // Update error state\n      }\n    };\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Catalog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: Array.isArray(movies) && movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) // Display a message if there are no movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"/oiihY625Ce2rW4TtQJCK1P9yC8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","MovieCard","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","error","setError","fetchMovies","response","fetch","ok","Error","status","data","json","console","log","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","className","length","map","movie","_id","_c","$RefreshReg$"],"sources":["C:/Users/l-thea/Documents/b431/movieAppClient/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport MovieCard from '../components/MovieCard';\r\n\r\nfunction Home() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [error, setError] = useState(null); // State to handle errors\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetch('https://movieapp-api-lms1.onrender.com/movies/getMovies'); // Correct endpoint\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('API Response:', data); // Log the response to inspect its structure\r\n\r\n        // Access the movies array from the response object\r\n        if (Array.isArray(data.movies)) {\r\n          setMovies(data.movies); // Set movies if data.movies is an array\r\n        } else {\r\n          throw new Error('Response does not contain an array of movies');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error);\r\n        setError('Failed to load movies. Please try again later.'); // Update error state\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Movie Catalog</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message if there's an error */}\r\n      <div className=\"movie-list\">\r\n        {Array.isArray(movies) && movies.length > 0 ? (\r\n          movies.map(movie => (\r\n            <MovieCard key={movie._id} movie={movie} />\r\n          ))\r\n        ) : (\r\n          <p>No movies available.</p> // Display a message if there are no movies\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyD,CAAC,CAAC,CAAC;QACzF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC,CAAC,CAAC;;QAEpC;QACA,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAACV,MAAM,CAAC,EAAE;UAC9BC,SAAS,CAACS,IAAI,CAACV,MAAM,CAAC,CAAC,CAAC;QAC1B,CAAC,MAAM;UACL,MAAM,IAAIQ,KAAK,CAAC,8CAA8C,CAAC;QACjE;MACF,CAAC,CAAC,OAAON,KAAK,EAAE;QACdU,OAAO,CAACV,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CC,QAAQ,CAAC,gDAAgD,CAAC,CAAC,CAAC;MAC9D;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBlB,KAAK,iBAAIL,OAAA;MAAGwB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,eACnDvB,OAAA;MAAK0B,SAAS,EAAC,YAAY;MAAAP,QAAA,EACxBF,KAAK,CAACC,OAAO,CAACf,MAAM,CAAC,IAAIA,MAAM,CAACwB,MAAM,GAAG,CAAC,GACzCxB,MAAM,CAACyB,GAAG,CAACC,KAAK,iBACd7B,OAAA,CAACF,SAAS;QAAiB+B,KAAK,EAAEA;MAAM,GAAxBA,KAAK,CAACC,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC3C,CAAC,gBAEFvB,OAAA;QAAAmB,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CA7CQD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AA+Cb,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}